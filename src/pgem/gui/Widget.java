//*************************************************************************************************
package pgem.gui;
//*************************************************************************************************

import java.util.ArrayList;
import java.util.Collections;
import java.util.EnumMap;
import java.util.List;
import java.util.Map;

import javax.vecmath.Vector2f;

import pgem.paint.Graphics;

//*************************************************************************************************
public class Widget {

	//=============================================================================================
	private static final Vector2f ORIGIN = new Vector2f(0, 0);
	private static final List<Widget> EMPTY = Collections.unmodifiableList(new ArrayList<>(0));
	//=============================================================================================
	
	//=============================================================================================
	private final Vector2f position = new Vector2f();
	private final Vector2f size = new Vector2f();
	//=============================================================================================

	//=============================================================================================
	private Widget parent = null;
	private final List<Widget> children;
	private final List<Widget> _children;
	//=============================================================================================

	//=============================================================================================
	private final Map<GUIFlag, Object> components = new EnumMap<>(GUIFlag.class);
	private final Map<GUIFlag, Object> _components = Collections.unmodifiableMap(components);
	//=============================================================================================
	
	//=============================================================================================
	public Widget() {
		this(false);
	}
	//=============================================================================================

	//=============================================================================================
	public Widget(boolean group) {
		children = group ? new ArrayList<>() : EMPTY;
		_children = group ? Collections.unmodifiableList(children) : EMPTY;
	}
	//=============================================================================================
	
	//=============================================================================================
	public Vector2f position() {
		return this.position;
	}
	//=============================================================================================

	//=============================================================================================
	public void position(Vector2f p) {
		position(p.x, p.y);
	}
	//=============================================================================================

	//=============================================================================================
	public void position(float x, float y) {
		this.position.set(x, y);
	}
	//=============================================================================================

	//=============================================================================================
	public Vector2f size() {
		return this.size;
	}
	//=============================================================================================

	//=============================================================================================
	public void size(Vector2f s) {
		size(s.x, s.y);
	}

	//=============================================================================================
	public void size(float w, float h) {
		this.size.set(w, h);
	}
	//=============================================================================================

	//=============================================================================================
	public Widget parent() {
		return this.parent;
	}
	//=============================================================================================

	//=============================================================================================
	public void parent(Widget p) {
		if (this.parent == p) return;
		if (this.parent != null) this.parent.children.remove(this);
		this.parent = p;
		if (this.parent != null) this.parent.children.add(this);
	}
	//=============================================================================================

	//=============================================================================================
	public List<Widget> children() {
		return _children;
	}
	//=============================================================================================

	//=============================================================================================
	public Map<GUIFlag, Object> components() {
		return _components;
	}
	//=============================================================================================

	//=============================================================================================
	public void component(GUIFlag flag, Object component) {
		this.components.put(flag, component);
	}
	//=============================================================================================

	//=============================================================================================
	public void paint(Graphics g) {
		g.push();
		g.translate(position.x, position.y);
		paintWidget(g);
		paintChildren(g);
		g.pop();
	}
	//=============================================================================================

	//=============================================================================================
	protected void paintWidget(Graphics g) {
		g.color(.1f, .1f, .1f, .4f);
		g.box(true, ORIGIN, size);
		g.color(1, 0, 0);
		g.box(false, ORIGIN, size);
	}
	//=============================================================================================
	
	//=============================================================================================
	protected void paintChildren(Graphics g) {
		for (int i = children.size()-1; i>=0; i--) {
			var child = children.get(i);
			child.paint(g);
		}
	}
	//=============================================================================================
	
}
//*************************************************************************************************
