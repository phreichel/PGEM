//*************************************************************************************************
package pgem.terrain;
//*************************************************************************************************

import pgem.noise.Octave;
import pgem.noise.Perlin;
import pgem.noise.Scale;

//*************************************************************************************************
public class TerrainGenerator {

	//=============================================================================================
	public final long seed;
	public final short w; 
	public final short h; 
	//=============================================================================================

	//=============================================================================================
	private pgem.noise.Module alt;
	//=============================================================================================
	
	//=============================================================================================
	public TerrainGenerator(long seed, short w, short h) {
		this.seed = seed;
		this.w = w;
		this.h = h;
		initALT();
	}
	//=============================================================================================

	//=============================================================================================
	public Chunk generate(long x, long y) {		
		x = x - x % w;
		y = y - y % h;
		Chunk chunk = new Chunk(x, y, w, h);
		genALT(chunk);
		return chunk;
	}
	//=============================================================================================

	//=============================================================================================
	private void initALT() {
		Perlin perlin = new Perlin(seed);
		Octave octave = new Octave(perlin, 8);
		Scale  scale  = new Scale(octave, 5);
		alt = scale;
	}
	//=============================================================================================
	
	//=============================================================================================
	private void genALT(Chunk chunk) {
		for (int i=0; i<=w; i++) {
			for (int j=0; j<=h; j++) {
				double value = alt.noise((chunk.x+i) * .1, 0, (chunk.y+j) * .1);
				chunk.alt[i][j] = (float) value;
			}
		}
	}
	//=============================================================================================
	
}
//*************************************************************************************************
